HOMEPAGE: http://hethongnhung.com , http://laptrinhnhung.com

* Download source yocto BSP

    $ git clone https://gitlab.com/embedded-yocto/udoo-neo-bsp.git
    
* Prepare the build environment

    To form a warm and cosy build environment you have to decide which board to start with.

    For UDOO Neo development 

    $ MACHINE=udooneo DISTRO=fslc-framebuffer source setup-environment build

* Build the Qt5 image

    $ bitbake udoo-image-qt5

    To build for another imamge, example

    $ bitbake udoo-image-full-cmdline
    
* Burning the image to the SD-Card

    Please double check the device of your SD-Card. This can corrupt your installation

    I do the following on my Linux box

    $ umount /dev/sd<disk>?
    $ bzcat build/tmp/deploy/images/udooneo/udoo-image-qt5-udooneo.wic.bz2 | sudo dd of=/dev/<disk> bs=32M

* Cross compile a Qt5 SDK to use in QtCreator

    The recommended way to build a fully featured toolchain for your image is to use the populate_sdk target for building a toolchain installer

    $ bitbake udoo-image-qt5 -c populate_sdk
    
    Grab a good book and wait until the task is finished.... After the builds has finished you can install the toolchain like this:
    sudo tmp/deploy/sdk/fslc-framebuffer-glibc-x86_64-udoo-image-qt5-armv7at2hf-neon-toolchain-2.2.3.sh 
    [sudo] password for user: 
    FSLC FrameBuffer SDK installer version 2.2.3
    ============================================
    Enter target directory for SDK (default: /opt/fslc-framebuffer/2.2.3): 
    You are about to install the SDK to "/opt/fslc-framebuffer/2.2.3". Proceed[Y/n]? 
    Extracting SDK.............................................................................